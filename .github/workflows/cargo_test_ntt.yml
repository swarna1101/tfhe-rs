# Test tfhe-ntt
name: Cargo Test tfhe-ntt

on:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
  CHECKOUT_TOKEN: ${{ secrets.REPO_CHECKOUT_TOKEN || secrets.GITHUB_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  should-run:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      ntt_test: ${{ env.IS_PULL_REQUEST == 'false' || steps.changed-files.outputs.ntt_any_changed }}
    steps:
      - name: Checkout tfhe-rs
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          persist-credentials: 'false'
          token: ${{ env.CHECKOUT_TOKEN }}

      - name: Check for file changes
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files_yaml: |
            ntt:
              - tfhe/Cargo.toml
              - Makefile
              - tfhe-ntt/**
              - '.github/workflows/cargo_test_ntt.yml'

  cargo-tests-ntt:
    needs: should-run
    if: needs.should-run.outputs.ntt_test == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: 'false'
          token: ${{ env.CHECKOUT_TOKEN }}

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: stable
          override: true

      - name: Test no-std (scalar only)
        run: make test_ntt_no_std

      - name: Test Barrett reduction scalar implementations
        run: |
          cd tfhe-ntt
          cargo test --release --lib -- test_barrett_reduction_large_prime_regression
          cargo test --release --lib -- test_barrett_reduction_double_subtraction_regression
          cargo test --release --lib -- test_mul_assign_normalize_scalar
          cargo test --release --lib -- test_mul_accumulate_scalar
          cargo test --release --lib -- test_normalize_scalar
          cargo test --release --lib -- test_barrett32
          cargo test --release --lib -- test_barrett52
          cargo test --release --lib -- test_barrett64

  cargo-tests-ntt-nightly:
    needs: should-run
    if: needs.should-run.outputs.ntt_test == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: 'false'
          token: ${{ env.CHECKOUT_TOKEN }}

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          override: true

      - name: Test nightly (includes SIMD on x86_64)
        run: make test_ntt_nightly

      - name: Test no-std nightly (includes SIMD on x86_64)
        run: make test_ntt_no_std_nightly

      - name: Test Barrett reduction SIMD implementations (x86_64 only)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' || matrix.os == 'windows-latest'
        run: |
          cd tfhe-ntt
          # Test non-regression tests for SIMD implementations
          cargo test --release --features=nightly --lib -- test_barrett_reduction_double_subtraction_regression || echo "SIMD regression tests not available on this platform"
          
          # Test SIMD implementations specifically
          cargo test --release --features=nightly --lib -- test_mul_assign_normalize_avx2 || echo "AVX2 not available on this platform"
          cargo test --release --features=nightly --lib -- test_mul_assign_normalize_avx512 || echo "AVX512 not available on this platform"
          cargo test --release --features=nightly --lib -- test_mul_accumulate_avx2 || echo "AVX2 not available on this platform"
          cargo test --release --features=nightly --lib -- test_mul_accumulate_avx512 || echo "AVX512 not available on this platform"
          cargo test --release --features=nightly --lib -- test_normalize_avx2 || echo "AVX2 not available on this platform"
          cargo test --release --features=nightly --lib -- test_normalize_avx512 || echo "AVX512 not available on this platform"
          # Test 64-bit SIMD implementations
          cargo test --release --features=nightly --lib -- test_mul_assign_normalize_ifma || echo "IFMA not available on this platform"
          cargo test --release --features=nightly --lib -- test_mul_accumulate_ifma || echo "IFMA not available on this platform"

  cargo-tests-ntt-successful:
    needs: [ should-run, cargo-tests-ntt, cargo-tests-ntt-nightly ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests do not need to run
        if: needs.should-run.outputs.ntt_test == 'false'
        run: |
          echo "tfhe-ntt files haven't changed tests don't need to run"

      - name: Check all tests success
        if: needs.should-run.outputs.ntt_test == 'true' &&
          needs.cargo-tests-ntt.result == 'success' &&
          needs.cargo-tests-ntt-nightly.result == 'success'
        run: |
          echo "All tfhe-ntt tests passed"
          echo "✓ Scalar Barrett reduction tests: PASSED"
          echo "✓ SIMD Barrett reduction tests: PASSED (on x86_64 platforms)"

      - name: Check tests failure
        if: needs.should-run.outputs.ntt_test == 'true' &&
          (needs.cargo-tests-ntt.result != 'success' ||
          needs.cargo-tests-ntt-nightly.result != 'success')
        run: |
          echo "Some tfhe-ntt tests failed"
          echo "❌ Scalar Barrett reduction tests: FAILED" && exit 1
          echo "❌ SIMD Barrett reduction tests: FAILED" && exit 1
